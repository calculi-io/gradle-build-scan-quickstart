{
	"metadata": {
		"version": 2
	},
	"application": {
		"name": "yg-java-gradle-os",
		"language": "JAVA_GRADLE",
		"artifact_store": {
			"repositories": null
		}
	},
	"pipeline": {
		"segments": [
			{
				"name": "Build",
				"segment_type": "build",
				"exit_actions": {},
				"properties": [
					{
						"name": "gradle.user.home",
						"description": "GRADLE_USER_HOME is set to ${SEGMENT_BASE_DIR}/cache/.gradle by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created",
						"value": "${SEGMENT_BASE_DIR}/cache/.gradle",
						"type": "string"
					},
					{
						"name": "ivy.defaultCacheDir",
						"description": "ivy cache directory is set to ${SEGMENT_BASE_DIR}/cache/.ivy by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created",
						"value": "${SEGMENT_BASE_DIR}/cache/.ivy",
						"type": "string"
					},
					{
						"name": "maven.repo.local",
						"description": "maven local repository is set to ${SEGMENT_BASE_DIR}/cache/.m2 by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created",
						"value": "${SEGMENT_BASE_DIR}/cache/.m2",
						"type": "string"
					},
					{
						"name": "gr.whitesource.opensource.scan",
						"value": true,
						"type": "boolean"
					}
				],
				"deployment_strategy": {},
				"application_init": {},
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"cache_info": {
					"paths": [
						"((gradle.user.home))",
						"((ivy.defaultCacheDir))",
						"((maven.repo.local))"
					]
				},
				"tasks": [
					{
						"name": "yg-java-gradle-os",
						"steps": [
							{
								"name": "build",
								"definition": "build",
								"command": "gradle build",
								"properties": null
							}
						],
						"docker_options": {}
					}
				]
			}
		],
		"exit_actions": {},
		"default_properties": [
			{
				"name": "gr.codeql.run.scan",
				"value": "false",
				"type": "boolean"
			},
			{
				"name": "gr.whitsource.opensource.scan",
				"value": "false",
				"type": "boolean"
			}
		],
		"deployment_files": [],
		"application_init": {
			"command": "bin/start-service.sh"
		}
	},
	"organization": {
		"orgname": "GR-Product"
	},
	"infrastructure": {
		"stemcells": [
			{
				"alias": "ubuntu-trusty",
				"os": "ubuntu-trusty",
				"version": "latest"
			},
			{
				"alias": "ubuntu-xenial",
				"os": "ubuntu-xenial",
				"version": "latest"
			},
			{
				"alias": "windows1803",
				"os": "windows1803",
				"version": "latest"
			},
			{
				"alias": "windows2012R2",
				"os": "windows2012R2",
				"version": "latest"
			},
			{
				"alias": "default",
				"os": "ubuntu-trusty",
				"version": "latest"
			},
			{
				"alias": "centos-7",
				"os": "centos-7",
				"version": "latest"
			}
		],
		"resources": [
			{
				"name": "pipeline",
				"image": {
					"name": "docker-registry.query.consul:443/pipeline-image-cli-gx-6260-test",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "deployment",
				"image": {
					"name": "docker-registry.query.consul:443/pipeline-image-cli-gx-6260-test",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "eks-tools",
				"image": {
					"name": "docker-registry.service.consul:443/pipeline-image-eks-tools",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "idgenerator",
				"image": {
					"name": "docker-registry.query.consul:443/gr-id-generator",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "emitter",
				"image": {
					"name": "docker-registry.query.consul:443/guide-rails-emitter",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "git-resource",
				"image": {
					"name": "docker-registry.query.consul:443/gr-git-resource",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "gerrit-resource",
				"image": {
					"name": "docker-registry.service.consul:443/gr-gerrit-resource",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "build-breaker",
				"image": {
					"name": "docker-registry.query.consul:443/gr-build-breaker",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "s3",
				"image": {
					"name": "docker-registry.query.consul:443/concourse-s3-resource",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "slack",
				"image": {
					"name": "docker-registry.query.consul:443/concourse-slack-resource",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "email",
				"image": {
					"name": "docker-registry.query.consul:443/gr-email-resource",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "sonar",
				"image": {
					"name": "docker-registry.query.consul:443/concourse-sonarqube-resource",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "time",
				"image": {
					"name": "docker-registry.query.consul:443/gr-time-resource",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "azure-blobstore",
				"image": {
					"name": "docker-registry.query.consul:443/concourse-azure-blobstore-resource",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "gr-gcs-resource",
				"image": {
					"name": "docker-registry.query.consul:443/gr-gcs-resource",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "veracode-scanner",
				"image": {
					"name": "docker-registry.query.consul:443/veracode-scanner",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "netsparker-scanner",
				"image": {
					"name": "docker-registry.service.consul:443/netsparker-scanner",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "docker-resource",
				"image": {
					"name": "docker-registry.query.consul:443/gr-docker-image",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "build",
				"image": {
					"name": "docker-registry.query.consul:443/pipeline-image-java-tools",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			}
		],
		"notification_configurations": [],
		"vault": {},
		"concourse": {
			"address": "https://concourse-web.service.consul",
			"team": "main"
		},
		"mq": {
			"host": "rabbitmq.service.consul:5671"
		},
		"bosh": {}
	}
}